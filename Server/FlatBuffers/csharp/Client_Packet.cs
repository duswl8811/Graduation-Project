// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Game.Protocol
{

    using global::System;
    using global::FlatBuffers;

    public struct Client_Packet : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static Client_Packet GetRootAsClient_Packet(ByteBuffer _bb) { return GetRootAsClient_Packet(_bb, new Client_Packet()); }
        public static Client_Packet GetRootAsClient_Packet(ByteBuffer _bb, Client_Packet obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
        public Client_Packet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

        public static Offset<Client_Packet> CreateClient_Packet(FlatBufferBuilder builder,
            int id = 0)
        {
            builder.StartObject(1);
            Client_Packet.AddId(builder, id);
            return Client_Packet.EndClient_Packet(builder);
        }

        public static void StartClient_Packet(FlatBufferBuilder builder) { builder.StartObject(1); }
        public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
        public static Offset<Client_Packet> EndClient_Packet(FlatBufferBuilder builder)
        {
            int o = builder.EndObject();
            return new Offset<Client_Packet>(o);
        }
    };

}