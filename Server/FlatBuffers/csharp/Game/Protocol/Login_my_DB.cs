// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Game.Protocol
{

using global::System;
using global::FlatBuffers;

public struct Login_my_DB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Login_my_DB GetRootAsLogin_my_DB(ByteBuffer _bb) { return GetRootAsLogin_my_DB(_bb, new Login_my_DB()); }
  public static Login_my_DB GetRootAsLogin_my_DB(ByteBuffer _bb, Login_my_DB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Login_my_DB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public Vec3? Position { get { int o = __p.__offset(8); return o != 0 ? (Vec3?)(new Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public int Hp { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxHp { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Item1 { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Item2 { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Item3 { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Item4 { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Character { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Ic1 { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Ic2 { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Ic3 { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int IC4 { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static void StartLogin_my_DB(FlatBufferBuilder builder) { builder.StartObject(14); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<Vec3> positionOffset) { builder.AddStruct(2, positionOffset.Value, 0); }
  public static void AddHp(FlatBufferBuilder builder, int hp) { builder.AddInt(3, hp, 0); }
  public static void AddMaxHp(FlatBufferBuilder builder, int maxHp) { builder.AddInt(4, maxHp, 0); }
  public static void AddItem1(FlatBufferBuilder builder, int item1) { builder.AddInt(5, item1, 0); }
  public static void AddItem2(FlatBufferBuilder builder, int item2) { builder.AddInt(6, item2, 0); }
  public static void AddItem3(FlatBufferBuilder builder, int item3) { builder.AddInt(7, item3, 0); }
  public static void AddItem4(FlatBufferBuilder builder, int item4) { builder.AddInt(8, item4, 0); }
  public static void AddCharacter(FlatBufferBuilder builder, int character) { builder.AddInt(9, character, 0); }
  public static void AddIc1(FlatBufferBuilder builder, int ic1) { builder.AddInt(10, ic1, 0); }
  public static void AddIc2(FlatBufferBuilder builder, int ic2) { builder.AddInt(11, ic2, 0); }
  public static void AddIc3(FlatBufferBuilder builder, int ic3) { builder.AddInt(12, ic3, 0); }
  public static void AddIC4(FlatBufferBuilder builder, int iC4) { builder.AddInt(13, iC4, 0); }
  public static Offset<Login_my_DB> EndLogin_my_DB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Login_my_DB>(o);
  }
};


}
