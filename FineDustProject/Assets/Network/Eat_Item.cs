// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Game.Protocol
{

using global::System;
using global::FlatBuffers;

public struct Eat_Item : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Eat_Item GetRootAsEat_Item(ByteBuffer _bb) { return GetRootAsEat_Item(_bb, new Eat_Item()); }
  public static Eat_Item GetRootAsEat_Item(ByteBuffer _bb, Eat_Item obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Eat_Item __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ItemID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PlayerID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Eat_Item> CreateEat_Item(FlatBufferBuilder builder,
      int itemID = 0,
      int playerID = 0) {
    builder.StartObject(2);
    Eat_Item.AddPlayerID(builder, playerID);
    Eat_Item.AddItemID(builder, itemID);
    return Eat_Item.EndEat_Item(builder);
  }

  public static void StartEat_Item(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddItemID(FlatBufferBuilder builder, int itemID) { builder.AddInt(0, itemID, 0); }
  public static void AddPlayerID(FlatBufferBuilder builder, int playerID) { builder.AddInt(1, playerID, 0); }
  public static Offset<Eat_Item> EndEat_Item(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Eat_Item>(o);
  }
};


}
